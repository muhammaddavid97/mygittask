# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  # Ganti dengan nama akun Docker Hub Anda (misalnya: myuser/my-app)
  DOCKER_IMAGE_NAME: d4v1d007/demo-workflow

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Checkout Repository ðŸ›’
        uses: actions/checkout@v4

    # Langkah 2: Login ke Docker Hub
    - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # Pastikan Anda menyimpan DOCKER_USERNAME dan DOCKER_PASSWORD sebagai GitHub Secrets
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    # Langkah 3: Ekstrak metadata (tag) untuk image Docker
    - name: Extract Docker metadata (tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=sha,format=long # Tag image dengan hash commit (misalnya: 1a2b3c4d5e6f...)
            type=raw,value=latest,enable={{is_default_branch}} # Tag 'latest' hanya pada branch utama (main)

    # Langkah 4: Build dan Push image Docker
    - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Direktori konteks build (biasanya root)
          push: true # Aktifkan push ke registry
          tags: d4v1d007/demo-workflow:latest
          cache-from: type=gha # Menggunakan cache untuk mempercepat build
          cache-to: type=gha,mode=max
